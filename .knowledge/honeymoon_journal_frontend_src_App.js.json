{"is_source_file": true, "format": "JavaScript (React JSX)", "description": "Main application component for a React web app managing user authentication, theme switching, and page routing. It handles user state management, API interactions for login, registration, profile fetching, and media handling. The component defines routes for different pages such as Home, Gallery, Map, Profile, Favorites, and SharedJournal.", "external_files": ["./components/Header", "./components/Sidebar", "./pages/Home", "./pages/Gallery", "./pages/Map", "./pages/Profile", "./pages/Favorites", "./pages/SharedJournal", "./api", "./App.css"], "external_methods": ["react", "react-router-dom", "useState", "useEffect", "BrowserRouter", "Routes", "Route", "useNavigate", "fetchProfile", "fetchEntries", "fetchGallery", "registerUser", "loginUser", "logoutUser", "createEntry", "uploadMedia"], "published": ["App"], "classes": [], "methods": [{"name": "toggleTheme", "description": "Switches the theme between 'light' and 'dark'."}, {"name": "handleLogin", "description": "Handles user login: authenticates via API, updates token and user state, and manages local storage."}, {"name": "handleRegister", "description": "Handles user registration: registers via API, updates token and user state, and manages local storage."}, {"name": "handleLogout", "description": "Logs out the user: clears user state, token, local storage, and related data."}, {"name": "handleEntrySubmit", "description": "Creates a new journal entry via API and updates entries list."}, {"name": "handleMediaUpload", "description": "Uploads media file via API and updates gallery."}, {"name": "onFilterChange", "description": "Placeholder for filter change logic in sidebar."}, {"name": "App()", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["fetchProfile", "fetchEntries", "fetchGallery", "loginUser", "registerUser", "logoutUser", "createEntry", "uploadMedia"], "search-terms": ["React Router", "API authentication", "theme toggle", "state management", "routes", "media upload", "journal entries", "user profile"], "state": 2, "file_id": 7, "knowledge_revision": 71, "git_revision": "671feb06a249719c9b53908913f1409531b776bb", "revision_history": [{"47": "d10cf240527a8c213616ff823fd81cfac64a7617"}, {"71": "671feb06a249719c9b53908913f1409531b776bb"}], "ctags": [{"_type": "tag", "name": "App", "path": "/home/kavia/workspace/code-generation/honeymoon-memory-journal-ad3a6afd/honeymoon_journal_frontend/src/App.js", "pattern": "/^function App() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "handleLogout", "path": "/home/kavia/workspace/code-generation/honeymoon-memory-journal-ad3a6afd/honeymoon_journal_frontend/src/App.js", "pattern": "/^          onLogout={handleLogout}$/", "language": "JavaScript", "kind": "field", "scope": "App.onLogout", "scopeKind": "class"}, {"_type": "tag", "name": "theme", "path": "/home/kavia/workspace/code-generation/honeymoon-memory-journal-ad3a6afd/honeymoon_journal_frontend/src/App.js", "pattern": "/^          theme={theme}$/", "language": "JavaScript", "kind": "field", "scope": "App.theme", "scopeKind": "class"}, {"_type": "tag", "name": "toggleTheme", "path": "/home/kavia/workspace/code-generation/honeymoon-memory-journal-ad3a6afd/honeymoon_journal_frontend/src/App.js", "pattern": "/^          onThemeToggle={toggleTheme}$/", "language": "JavaScript", "kind": "field", "scope": "App.onThemeToggle", "scopeKind": "class"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/code-generation/honeymoon-memory-journal-ad3a6afd/honeymoon_journal_frontend/src/App.js", "pattern": "/^          user={user}$/", "language": "JavaScript", "kind": "field", "scope": "App.user", "scopeKind": "class"}], "hash": "4c37051ddd1e8b3ff1412c82b3773769", "format-version": 4, "code-base-name": "honeymoon_journal_frontend", "filename": "honeymoon_journal_frontend/src/App.js", "fields": [{"name": "onLogout={handleLogout}", "scope": "App.onLogout", "scopeKind": "class", "description": "unavailable"}, {"name": "theme={theme}", "scope": "App.theme", "scopeKind": "class", "description": "unavailable"}, {"name": "onThemeToggle={toggleTheme}", "scope": "App.onThemeToggle", "scopeKind": "class", "description": "unavailable"}, {"name": "user={user}", "scope": "App.user", "scopeKind": "class", "description": "unavailable"}]}